import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import React, { useState } from "react";

import { api } from "../utils/api";
import MenuGrid from "./components/MenuGrid";

const Home: NextPage = () => {
    //const hello = api.example.hello.useQuery({ text: "from tRPC" });

    const [content, setContent] = useState([])

    const [boxNum, setboxNum] = useState(0)

    const [config, setConfig] = useState<object[]>([])

    const [justify, setJustify] = useState("")
    const handleJustifyChange = (event: React.FormEvent<HTMLSelectElement>) => {
        const selectedValue = (event.target as HTMLInputElement).value
        setJustify(selectedValue)
    }

    const [items, setItems] = useState("")
    const handleItemsChange = (event: React.FormEvent<HTMLSelectElement>) => {
        const selectedValue = (event.target as HTMLInputElement).value
        setItems(selectedValue)
    }

    const handleChange = (event: React.FormEvent<HTMLSelectElement>) => {
        const target = (event.target as HTMLInputElement)
        console.log(target.name + "-" + target.value)
        const inputValue = {
            key: target.name,
            value: target.value
        }


        //fixa så att samma kategori av attribut inte går att lägga på samma box
        setConfig([...config, inputValue])

    }

    return (
        <>
            <Head>
                <title>CSS Sandbox</title>
                <meta name="description" content="Generated by create-t3-app" />
            </Head>
            <main className="flex min-h-screen flex-col items-center ">
                <div className="flex flex-row flex-[0.5] w-screen ">
                    <div className="flex flex-[0.8] items-center justify-center border-2 border-blue-900">
                        {/**
             * <label htmlFor="alignment" className="mr-2">justify-content</label>
            <select name="justify" id="alignment" value={justify} onChange={handleChange} className="border-2 border-black">
              <option value="">None</option>
              <option value="start">start</option>
              <option value="end">end</option>
              <option value="center">center</option>
              <option value="between">between</option>
              <option value="around">around</option>
              <option value="evenly">evenly</option>
            </select>
            <label htmlFor="alignment" className="mr-2">align-items</label>
            <select name="items" id="alignment" value={items} onChange={handleChange} className="border-2 border-black">
              <option value="">None</option>
              <option value="stretch">stretch</option>
              <option value="start">start</option>
              <option value="center">center</option>
              <option value="end">end</option>
              <option value="baseline">baseline</option>
            </select>
             * 
             * 
             */}

                        <MenuGrid />
                    </div>
                    <div className="flex flex-[0.2] items-center justify-center border-2 border-green-900">
                        <button className="border-2 border-black" onClick={() => { setboxNum(boxNum + 1) }}>Add Box</button>
                        <button className="border-2 border-black" onClick={() => { boxNum >= 0 ? setboxNum(boxNum - 1) : setboxNum(0) }}>Remove Box</button>
                    </div>
                </div>
                <section className={`flex flex-1 h-screen w-screen border-2 border-red-900 ${config.join(" ")}`}>
                    {boxNum >= 0 ? Array(boxNum).fill(0).map((_, index) => {
                        return <div className="bg-blue-700" key={index}>test {index}</div>
                    }) : ''}
                </section>
            </main>
        </>
    );
};

export default Home;

//använd genom <AuthShowcase/>
const AuthShowcase: React.FC = () => {
    const { data: sessionData } = useSession();

    const { data: secretMessage } = api.example.getSecretMessage.useQuery(
        undefined, // no input
        { enabled: sessionData?.user !== undefined },
    );

    return (
        <div className="flex flex-col items-center justify-center gap-4">
            <p className="text-center text-2xl text-white">
                {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
                {secretMessage && <span> - {secretMessage}</span>}
            </p>
            <button
                className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
                onClick={sessionData ? () => void signOut() : () => void signIn()}
            >
                {sessionData ? "Sign out" : "Sign in"}
            </button>
        </div>
    );
};
