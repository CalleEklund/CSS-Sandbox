import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";
import React, { useState, useEffect } from "react";
import { api } from "../utils/api";
import Canvas from "./canvas";
import Image from 'next/image'



const Home: NextPage = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <>
      <Head>
        <title>CSS Sandbox</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link href="https://fonts.googleapis.com/css2?family=Jaldi:wght@700&display=swap" rel="stylesheet"></link>

      </Head>
      <main className="inset-0 h-screen flex items-center justify-center ">
        <Image className="-z-10" src="/unsplashbg.jpg" alt='canvas background' fill />
        <h1 className="font-Jaldi text-8xl">CSS- Sandbox</h1>
        {/**
         * Admin password input
         * Regular login
         */}
      </main>
      {/*{sessionData ? <Canvas /> : <div><p>Not logged in</p> <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-black no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button></div>}
      <div>
        <p>Admin Password</p>
        <input type="text" />
      </div>

      <div className="flex flex-col items-center justify-center gap-4 bg-black">
        <p className="text-center text-2xl text-black">
          {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
          {secretMessage && <span> - {secretMessage}</span>}
        </p>
        <button
          className="rounded-full bg-white/10 px-10 py-3 font-semibold text-black no-underline transition hover:bg-white/20"
          onClick={sessionData ? () => void signOut() : () => void signIn()}
        >
          {sessionData ? "Sign out" : "Sign in"}
        </button>
  </div>*/}

    </>
  );
};

export default Home;

//anv√§nd genom <AuthShowcase/>
const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );


};
